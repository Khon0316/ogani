package main

import (
	"github.com/gorilla/mux"
	"github.com/swaggo/http-swagger"
	"log"
	"net/http"
	_ "ogani.com/services/product/docs" // docs is generated by Swag CLI, you have to import it.

	"ogani.com/services/product/controllers/product"
)

// @title Catalog Swagger API
// @version 1.0
// @description  This is Catalog service
// @termsOfService http://swagger.io/terms/
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /api/v1
func main() {
	r := mux.NewRouter()

	api := r.PathPrefix("/api").Subrouter()
	api.NotFoundHandler = http.HandlerFunc(func(w http.ResponseWriter,r *http.Request){
		w.WriteHeader(http.StatusNotFound)
	})
	apiV1 := api.PathPrefix("/v1").Subrouter()

	apiV1.HandleFunc("/product/items?pageSize={size}&pageIndex={pageIndex}", productController.Items).Methods("GET")
	apiV1.HandleFunc("/product/items?id={id}", productController.ItemById).Methods("GET")
	apiV1.HandleFunc("/product/items/withname/{name}", productController.ItemsWithName).Methods("GET")
	apiV1.HandleFunc("/product/items/type/{catalogTypeId}/brand/{catalogBrandId}", productController.ItemsByTypeIdAndBrandId).Methods("GET")
	apiV1.HandleFunc("/product/items/type/all/brand/{catalogBrandId}", productController.ItemsByBrandId).Methods("GET")
	apiV1.HandleFunc("/product/catalogtypes", productController.ProductTypes).Methods("GET")
	apiV1.HandleFunc("/product/catalogbrands", productController.ProductBrands).Methods("GET")
	apiV1.HandleFunc("/product/items", productController.UpdateProduct).Methods("PUT")
	apiV1.HandleFunc("/product/items", productController.CreateProduct).Methods("POST")
	apiV1.HandleFunc("/product/{id}", productController.DeleteProduct).Methods("DELETE")

	r.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)

	r.Use(mux.CORSMethodMiddleware(apiV1))
	log.Fatal(http.ListenAndServe(":8080",r))
}
